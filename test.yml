version: '2'

services:
  analytics-engine:
    image: arifinrais/akin-pipeline:engine-dev
    container_name: analytics
    build:
      context: .
      dockerfile: docker/engine/Dockerfile.py3
    depends_on:
      - minio
      - job-enqueuer
      - mongo
    command: python main.py analyze
    restart: unless-stopped
  preparator-engine:
    image: arifinrais/akin-pipeline:engine-dev
    container_name: preparator
    build:
      context: .
      dockerfile: docker/engine/Dockerfile.py3
    depends_on:
      - minio
      - job-enqueuer
      - rq-server
    command: python main.py transform
    restart: unless-stopped
  aggregator-engine:
    image: arifinrais/akin-pipeline:engine-dev
    container_name: aggregator
    build:
      context: .
      dockerfile: docker/engine/Dockerfile.py3
    depends_on:
      - minio
      - job-enqueuer
    command: python main.py aggregate
    restart: unless-stopped
  ingestor-engine:
    image: arifinrais/akin-pipeline:engine-dev
    container_name: ingestor
    build:
      context: .
      dockerfile: docker/engine/Dockerfile.py3
    depends_on:
      - minio
      - job-enqueuer
      - rq-server
    command: python main.py ingest
    restart: unless-stopped
  data-server:
    image: arifinrais/akin-pipeline:data-server
    container_name: data-server
    build:
      context: .
      dockerfile: docker/data-server/Dockerfile.py3
    depends_on:
      - mongo
    ports:
      - "5000:5000"
    restart: unless-stopped
  minio:
    # viewable at http://127.0.0.1:9001/
    image: minio/minio:RELEASE.2021-07-27T02-40-15Z.fips
    container_name: minio
    volumes:
      - minio-data:/data
    ports:
      - "9001:9001"
      - "9000:9000"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /export --console-address ":9001"
    restart: always
  job-enqueuer:
    image: redislabs/rejson:1.0.7 #latest in dev is 1.0.7
    container_name: job-enqueuer
    ports:
      - "6379:6379"
    restart: always
  rq-server:
    image: redis:alpine
    command: redis-server --port 6389
    container_name: rq-server
    ports:
      - "6389:6389"
    restart: always
  rq-scraper:
    image: arifinrais/akin-pipeline:engine-dev
    build:
      context: .
      dockerfile: docker/engine/Dockerfile.py3
    depends_on:
      - rq-server
    deploy:
      replicas: 3
    command: python main.py scrape
    restart: unless-stopped
  rq-transform:
    image: arifinrais/akin-pipeline:engine-dev
    build:
      context: .
      dockerfile: docker/engine/Dockerfile.py3
    depends_on:
      - rq-server
    deploy:
      replicas: 3
    command: python main.py prepare
    restart: unless-stopped
  mongo:
    image: mongo:4.4.8-focal
    container_name: mongo
    volumes:
      - mongo-data:/data
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongo123
    restart: always

volumes:
  minio-data: # used for minio
  mongo-data: 
