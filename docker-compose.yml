version: '2'

services:
  pipeline-monitor:
    image: arifinrais/akin-pipeline:pipeline-monitor-dev
    build:
      context: .
      dockerfile: docker/pipeline-monitor/Dockerfile.py3
    depends_on:
      - job-enqueuer
      - kafka
      - zookeeper
    restart: always
  ingestor-engine:
    image: arifinrais/akin-pipeline:engine-ingestor-dev
    build:
      context: .
      dockerfile: docker/engine-ingestor/Dockerfile.py3
    depends_on:
      - minio
      - job-enqueuer
      - rq-server
    restart: always
  minio:
    # viewable at http://127.0.0.1:9001/
    image: minio/minio
    container_name: minio
    restart: always
    volumes:
      - minio-data:/data
    ports:
      - "9000:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /export --console-address ":9001"
  job-enqueuer:
    image: redislabs/rejson:latest
    container_name: job-enqueuer
    ports:
      - "6379:6379"
    restart: always
  rq-server:
    image: redis:alpine
    command: redis-server --port 6389
    ports:
      - "6389:6389"
    restart: always
  rq-worker:
    image: arifinrais/akin-pipeline:rq-worker-dev
    command: rq worker -u redis://rq-server:6389 ptn trd pub
    build: 
      context: .
      dockerfile: docker/rq-worker/Dockerfile.py3
    depends_on:
      - rq-server
    deploy:
      replicas: 3
    restart: always
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    restart: always
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_MESSAGE_MAX_BYTES: 2000000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    restart: always
volumes:
  minio-data: # used for minio
